@model LibraryManagementSystem.Models.HomePageViewModel
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Index";
}

<h1>Books Borrowing</h1>

<p>
    <a class="btn btn-outline-success" asp-action="Create">Create New</a>
</p>

<form asp-controller="Borrowings" asp-action="Index">
    <label>Title: <input type="text" asp-for="SearchString" class="search-bar" /></label>
    <input type="submit" class="btn btn-sm btn-group-vertical btn-outline-primary" value="Search" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BorrowedBooks[0].UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BorrowedBooks[0].BookId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BorrowedBooks[0].BorrowDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BorrowedBooks[0].ReturnDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BorrowedBooks[0].Fine)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.BorrowedBooks) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Book.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BorrowDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReturnDate)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fine)
                </td>
            <td>
                <a class="btn btn-outline-success" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="text-center">
    @Html.PagedListPager(Model.BorrowedBooks, page => Url.Action("Index", new { page, searchString = ViewBag.CurrentSearch }))
</div>
